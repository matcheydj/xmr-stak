name: Build on macOS
on: push

jobs:
  build:
    runs-on: macos-latest
    steps:
      - name: Check out repository code
        uses: actions/checkout@v2
      - name: Install GitHub CLI
        run: |
          brew update
          brew install gh
          brew install curl
          brew install gcc
      - name: Check for CUDA Toolkit
        run: |
              export PATH=/Developer/NVIDIA/CUDA-10.2/bin${PATH:+:${PATH}}
              export DYLD_LIBRARY_PATH=/Developer/NVIDIA/CUDA-10.2/lib\
                         ${DYLD_LIBRARY_PATH:+:${DYLD_LIBRARY_PATH}}
              kextstat | grep -i cuda
#curl -O https://developer.download.nvidia.com/compute/cuda/10.2/Prod/local_installers/cuda_10.2.89_mac.dmg        
#file too large for runner
#      - name: Oh no
#        run: |
#          echo "Oh, no!" > ohno.ohno
#          dd if=/dev/random of=ohno.ohno bs=1m
#        
#on
#on.<event_name>.types
#on.<push|pull_request>.<branches|tags>
#on.<push|pull_request>.paths
#on.schedule
#permissions
#env
#defaults
#defaults.run
#concurrency
#jobs
#jobs.<job_id>
#jobs.<job_id>.name
#jobs.<job_id>.needs
#jobs.<job_id>.runs-on
#jobs.<job_id>.permissions
#jobs.<job_id>.environment
#jobs.<job_id>.concurrency
#jobs.<job_id>.outputs
#jobs.<job_id>.env
#jobs.<job_id>.defaults
#jobs.<job_id>.defaults.run
#jobs.<job_id>.if
#jobs.<job_id>.steps
#jobs.<job_id>.steps[*].id
#jobs.<job_id>.steps[*].if
#jobs.<job_id>.steps[*].name
#jobs.<job_id>.steps[*].uses
#jobs.<job_id>.steps[*].run
#jobs.<job_id>.steps[*].with
#jobs.<job_id>.steps[*].with.args
#jobs.<job_id>.steps[*].with.entrypoint
#jobs.<job_id>.steps[*].env
#jobs.<job_id>.steps[*].continue-on-error
#jobs.<job_id>.steps[*].timeout-minutes
#jobs.<job_id>.timeout-minutes
#jobs.<job_id>.strategy
#jobs.<job_id>.strategy.matrix
#jobs.<job_id>.strategy.fail-fast
#jobs.<job_id>.strategy.max-parallel
#jobs.<job_id>.continue-on-error
#jobs.<job_id>.container
#jobs.<job_id>.container.image
#jobs.<job_id>.container.credentials
#jobs.<job_id>.container.env
#jobs.<job_id>.container.ports
#jobs.<job_id>.container.volumes
#jobs.<job_id>.container.options
#jobs.<job_id>.services
#jobs.<job_id>.services.<service_id>.image
#jobs.<job_id>.services.<service_id>.credentials
#jobs.<job_id>.services.<service_id>.env
#jobs.<job_id>.services.<service_id>.ports
#jobs.<job_id>.services.<service_id>.volumes
#jobs.<job_id>.services.<service_id>.options
